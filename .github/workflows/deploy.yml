name: Build & Deploy Dashboard + Prometheus

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-west-2
      ECR_REGISTRY: 386503255039.dkr.ecr.us-west-2.amazonaws.com
      DASHBOARD_REPO: dashboard
      PROMETHEUS_REPO: prometheus
      IMAGE_TAG: latest
      ECS_CLUSTER: dashboard-cluster
      DASHBOARD_SERVICE: dashboard-task-service
      PROMETHEUS_SERVICE: prometheus-service

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v3

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üîê Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: üèóÔ∏è Build & Push Dashboard Image to ECR
        run: |
          docker build -t $ECR_REGISTRY/$DASHBOARD_REPO:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$DASHBOARD_REPO:$IMAGE_TAG

      - name: üèóÔ∏è Build & Push Prometheus Image to ECR
        run: |
          docker build -t $ECR_REGISTRY/$PROMETHEUS_REPO:$IMAGE_TAG -f Dockerfile.prometheus .
          docker push $ECR_REGISTRY/$PROMETHEUS_REPO:$IMAGE_TAG

      # - name: üì¶ Set up Terraform
      #   uses: hashicorp/setup-terraform@v2

      # - name: ‚õèÔ∏è Terraform Init & Apply
      #   run: |
      #     terraform init
      #     terraform apply -auto-approve
      #   working-directory: ./terraform

      # - name: üöÄ Start ECS Dashboard Service
      #   run: |
      #     aws ecs update-service \
      #       --cluster $ECS_CLUSTER \
      #       --service $DASHBOARD_SERVICE \
      #       --desired-count 1 \
      #       --region $AWS_REGION

      # - name: üöÄ Start ECS Prometheus Service
      #   run: |
      #     aws ecs update-service \
      #       --cluster $ECS_CLUSTER \
      #       --service $PROMETHEUS_SERVICE \
      #       --desired-count 1 \
      #       --region $AWS_REGION

      # - name: ‚è±Ô∏è Wait 30 minutes before teardown
      #   run: sleep 1800

      # - name: üóëÔ∏è Destroy ALB Resources Only
      #   run: |
      #     terraform init
      #     terraform apply -auto-approve -target=aws_lb.dashboard_alb -destroy
      #     terraform apply -auto-approve -target=aws_lb_listener.http -destroy
      #     terraform apply -auto-approve -target=aws_lb_target_group.dashboard_tg -destroy
      #   working-directory: ./terraform

      # - name: üõë Stop ECS Services (Scale to 0)
      #   if: always()
      #   run: |
      #     aws ecs update-service \
      #       --cluster $ECS_CLUSTER \
      #       --service $DASHBOARD_SERVICE \
      #       --desired-count 0 \
      #       --region $AWS_REGION

      #     aws ecs update-service \
      #       --cluster $ECS_CLUSTER \
      #       --service $PROMETHEUS_SERVICE \
      #       --desired-count 0 \
      #       --region $AWS_REGION

      # - name: ‚úÖ Confirm teardown
      #   run: echo "ALB and ECS services shut down to save cost."